# ---
# apiVersion: v1
# kind: Namespace
# metadata:
  # name: cloudflared
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cloudflared
  name: cloudflared
  # namespace: cloudflared
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: cloudflared
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: cloudflared
    spec:
      containers:
      - command:
        - /usr/local/bin/cloudflared
        - tunnel
        - --config
        - /etc/cloudflared/default.yaml
        - --metrics
        - 0.0.0.0:9090
        - run
        image: visibilityspots/cloudflared:latest
        imagePullPolicy: Always
        name: cloudflared
        # healthcheck:
          # disable: true
        ports:
        - containerPort: 9090
          name: exporterport
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/cloudflared/default.yaml
          name: cloudflared-config
          readOnly: true
          subPath: default.yaml
        - mountPath: /etc/cloudflared/cred.json
          name: cloudflared-credentials
          readOnly: true
          subPath: cred.json
        - mountPath: /etc/cloudflared/cert.pem
          name: cloudflared-origin-cert
          readOnly: true
          subPath: cert.pem
      volumes:
      - configMap:
          name: cloudflared-config
        name: cloudflared-config
      - configMap:
          name: cloudflared-credentials
        name: cloudflared-credentials
      - name: cloudflared-origin-cert
        secret:
          secretName: cloudflared-origin-cert
          items:
          - key: cert.pem
            path: cert.pem
