---
grafana:
  port: "3000"
  cloud:
    enabled: false
    org: "{{ opconnect_results['grafana'].cloud_tenant_name }}"
    host: "{{ opconnect_results['grafana'].cloud_tenant_name }}.grafana.net"
    services:
      - prefix: am
        name: "Alertmanager"
      - prefix: hl
        name: "Loki"
      - prefix: hm
        name: "Metrics"
        subservices:
          - prefix: Graphite
            name: "Graphite"
          - prefix: Prom
            name: "Prometheus"
      - prefix: ht
        name: "Traces"
    provisioning:
      datasources:
        api_path: "datasources"
      dashboards:
        api_path: "dashboards/home"
  plugins: grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
  admin:
    username: "{{ opconnect_results['grafana'].username }}"
    password: "{{ opconnect_results['grafana'].password }}"
  smtp:
    host: smtp.gmail.com:587
    port: "587"
    username: "{{ opconnect_results['grafana'].smtp_username }}"
    password: "{{ opconnect_results['grafana'].smtp_password }}"
    from: grafana@{{ domain }}
  provisioning:
    alerting:
    datasources:
      apiVersion: 1
      datasources:
        - name: Influxdb
          type: influxdb
          access: proxy
          url: http://{{ influxdb.host }}:{{ influxdb.port }}
          database: influx
          username: "{{ influxdb.username }}"
          password: "{{ influxdb.password }}"
        - name: Varken
          type: influxdb
          access: proxy
          url: http://{{ influxdb.host }}:{{ influxdb.port }}
          database: varken
          username: "{{ influxdb.username }}"
          password: "{{ influxdb.password }}"
    dashboards:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: unifi
          orgId: 1
          folder: Unifi
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/unifi
        - name: media
          orgId: 1
          folder: Media
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/media
    notifiers:
    plugins:
  dashboards:
    default:
      prometheus:
        gnetId: 2
        revision: 2
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
      pihole:
        gnetId: 10176
        revision: 2
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
    unifi:
      client-insights:
        gnetId: 11315
        revision: 8
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
      uap-insights:
        gnetId: 11314
        revision: 9
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
      network-sites:
        gnetId: 11311
        revision: 4
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
      usw-insights:
        gnetId: 11312
        revision: 8
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
      usg-insights:
        gnetId: 11313
        revision: 8
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
      client-dpi:
        gnetId: 11310
        revision: 4
        datasource: "grafanacloud-{{ opconnect_results['grafana'].cloud_tenant_name }}-prom"
    media:
      varken-official:
        gnetId: 9585
        revision: 5
        datasource: Varken
      varken-unofficial:
        gnetId: 9558
        revision: 15
        datasource: Varken
influxdb:
  host: influxdb
  port: "8087"
  internal_port: "8086"
  username: "{{ opconnect_results['influxdb'].username }}"
  password: "{{ opconnect_results['influxdb'].password }}"
varken:
  maxmind:
    license_key: "{{ opconnect_results['mediaserver'].maxmind_license_key }}"
  tautulli:
    - url: "{{ opconnect_results['mediaserver'].tautulli_url }}"
      apikey: "{{ opconnect_results['mediaserver'].tautulli_apikey }}"
  sonarr:
    - url: "{{ opconnect_results['mediaserver'].sonarr_url }}"
      apikey: "{{ opconnect_results['mediaserver'].sonarr_apikey }}"
  radarr:
    - url: "{{ opconnect_results['mediaserver'].radarr_url }}"
      apikey: "{{ opconnect_results['mediaserver'].radarr_apikey }}"
  lidarr:
    - url: "{{ opconnect_results['mediaserver'].lidarr_url }}"
      apikey: "{{ opconnect_results['mediaserver'].lidarr_apikey }}"
  ombi:
    - url: "{{ opconnect_results['mediaserver'].ombi_url }}"
      apikey: "{{ opconnect_results['mediaserver'].ombi_apikey }}"
