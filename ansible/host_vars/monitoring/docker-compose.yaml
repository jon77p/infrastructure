---
version: "3"
services:
  prometheus:
    image: prom/prometheus:latest@sha256:41c08335aa57102b162584301cefccb3759d97f5f8c2758a8619025a74d7c8a4
    restart: always
    volumes:
      - "{{ docker_volume_dirs.prometheus[0] }}/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "{{ docker_volume_dirs.prometheus[1] }}:/prometheus" # todo: chown this after creation on host: chown 65534:65534
    ports:
      - "{{ compose_project_ports.prometheus[0] }}:{{ prometheus.internal_port }}"
    healthcheck:
      test: [CMD, wget, "https://healthchecks.{{ domain }}/ping/{{ prometheus.healthcheck }}", -O, /dev/null]
      timeout: 45s
      interval: 10s
      retries: 5
  loki:
    image: grafana/loki:latest@sha256:aff07ff548294b4ab8f82641646dbbec1b9cd80199b45331d3f7cf8e704b6197
    restart: always
    volumes:
      - "{{ docker_volume_dirs.loki[0] }}/local-config.yaml:/etc/loki/local-config.yaml"
    ports:
      - "{{ compose_project_ports.loki[0] }}:3100"
    healthcheck:
      test: [CMD, wget, "https://healthchecks.{{ domain }}/ping/{{ loki.healthcheck }}", -O, /dev/null]
      timeout: 45s
      interval: 10s
      retries: 5
  promtail:
    image: grafana/promtail:latest@sha256:c16c710f7333411a1a788842ec9967e26577053ff0c0dff41a8d9a6ea0b95c2b
    restart: always
    depends_on:
      - loki
    volumes:
      - /var/log/cloudflared.log:/var/log/cloudflared.log:ro
      - /var/log/journal:/var/log/journal:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ docker_volume_dirs.promtail[0] }}/config.yaml:/etc/promtail/config.yaml"
    command: -config.file=/etc/promtail/config.yaml
  influxdb:
    image: influxdb:2.5@sha256:0b8cee9d1704555d848d96b69f40c0e83ff16063015facbd0d07f7e09d64220d
    restart: always
    volumes:
      - "{{ docker_volume_dirs.influxdb[0] }}:/var/lib/influxdb"
    ports:
      - "{{ compose_project_ports.influxdb[0] }}:{{ influxdb.internal_port }}"
    healthcheck:
      test: [CMD, curl, "https://healthchecks.{{ domain }}/ping/{{ influxdb.healthcheck }}"]
      timeout: 45s
      interval: 10s
      retries: 5
  varken:
    image: boerderij/varken:latest@sha256:784aaf577c822a3e69c5b2792e0422896c8cdb0455e584cd5a4e46bca789848d
    restart: always
    depends_on:
      - influxdb
    volumes:
      - "{{ docker_volume_dirs.varken[0] }}:/config"
    environment:
      - TZ=America/Los_Angeles
    healthcheck:
      test: [CMD, wget, "https://healthchecks.{{ domain }}/ping/{{ varken.healthcheck }}", -O, /dev/null]
      timeout: 45s
      interval: 10s
      retries: 5
  grafana:
    image: grafana/grafana-oss:latest@sha256:8c65b333a3d369a095d752da2e784b484d4246659e9a4ac6a09b74353f95d1c9
    restart: always
    volumes:
      - "{{ docker_volume_dirs.grafana[0] }}/grafana.ini:/etc/grafana/grafana.ini"
      - "{{ docker_volume_dirs.grafana[1] }}:/var/lib/grafana"
      - "{{ docker_volume_dirs.grafana[2] }}:/var/lib/grafana/plugins"
      - "{{ docker_volume_dirs.grafana[3] }}:/etc/grafana/provisioning"
    ports:
      - "{{ compose_project_ports.grafana[0] }}:3000"
    depends_on:
      - prometheus
      - loki
      - influxdb
      - varken
    environment:
      GF_INSTALL_PLUGINS: "{{ grafana.plugins }}"
      GF_DEFAULT_INSTANCE_NAME: grafana
      GF_SECURITY_ADMIN_USER: "{{ grafana.admin.username }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana.admin.password }}"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: "{{ grafana.smtp.host }}"
      GF_SMTP_PORT: "{{ grafana.smtp.port }}"
      GF_SMTP_USER: "{{ grafana.smtp.username }}"
      GF_SMTP_PASSWORD: "{{ grafana.smtp.password }}"
      GF_SMTP_SKIP_VERIFY: "false"
      GF_SMTP_FROM_ADDRESS: "{{ grafana.smtp.from }}"
      GF_USERS_VERIFY_EMAIL_ENABLED: "true"
      GF_EMAILS_WELCOME_EMAIL_ON_SIGNUP: "true"
