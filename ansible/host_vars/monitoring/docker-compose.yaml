---
version: '3'
services:
  prometheus:
    image: prom/prometheus:latest
    restart: "always"
    volumes:
      - "{{ docker_volume_dirs.prometheus[0] }}/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "{{ docker_volume_dirs.prometheus[1] }}:/prometheus" # todo: chown this after creation on host: chown 65534:65534
    ports:
      - "{{ compose_project_ports.prometheus[0] }}:{{ prometheus.internal_port }}"
    healthcheck:
      test: ["CMD", "wget", "https://healthchecks.{{ domain }}/ping/{{ prometheus.healthcheck }}", "-O", "/dev/null"]
      timeout: 45s
      interval: 10s
      retries: 5
  loki:
    image: grafana/loki:latest
    restart: "always"
    volumes:
      - "{{ docker_volume_dirs.loki[0] }}/local-config.yaml:/etc/loki/local-config.yaml"
    ports:
      - "{{ compose_project_ports.loki[0] }}:3100"
    healthcheck:
      test: ["CMD", "wget", "https://healthchecks.{{ domain }}/ping/{{ loki.healthcheck }}", "-O", "/dev/null"]
      timeout: 45s
      interval: 10s
      retries: 5
  promtail:
    image: grafana/promtail:latest
    restart: "always"
    depends_on:
      - loki
    volumes:
      - "/var/log/cloudflared.log:/var/log/cloudflared.log:ro"
      - "/var/log/journal:/var/log/journal:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ docker_volume_dirs.promtail[0] }}/config.yaml:/etc/promtail/config.yaml"
    command: "-config.file=/etc/promtail/config.yaml"
  influxdb:
    image: influxdb:2.3@sha256:f90f1bda60f6db2d8ef1c61eac55d86d542451fb4c2e6e190f64fda9f85a468b
    restart: "always"
    volumes:
      - "{{ docker_volume_dirs.influxdb[0] }}:/var/lib/influxdb"
    ports:
      - "{{ compose_project_ports.influxdb[0] }}:{{ influxdb.internal_port }}"
    healthcheck:
      test: ["CMD", "curl", "https://healthchecks.{{ domain }}/ping/{{ influxdb.healthcheck }}"]
      timeout: 45s
      interval: 10s
      retries: 5
  varken:
    image: boerderij/varken:latest
    restart: "always"
    depends_on:
      - influxdb
    volumes:
      - "{{ docker_volume_dirs.varken[0] }}:/config"
    environment:
      - TZ=America/Los_Angeles
    healthcheck:
      test: ["CMD", "wget", "https://healthchecks.{{ domain }}/ping/{{ varken.healthcheck }}", "-O", "/dev/null"]
      timeout: 45s
      interval: 10s
      retries: 5
  grafana:
    image: grafana/grafana-oss:latest
    restart: "always"
    volumes:
      - "{{ docker_volume_dirs.grafana[0] }}/grafana.ini:/etc/grafana/grafana.ini"
      - "{{ docker_volume_dirs.grafana[1] }}:/var/lib/grafana"
      - "{{ docker_volume_dirs.grafana[2] }}:/var/lib/grafana/plugins"
      - "{{ docker_volume_dirs.grafana[3] }}:/etc/grafana/provisioning"
    ports:
      - "{{ compose_project_ports.grafana[0] }}:3000"
    depends_on:
      - prometheus
      - loki
      - influxdb
      - varken
    environment:
      GF_INSTALL_PLUGINS: "{{ grafana.plugins }}"
      GF_DEFAULT_INSTANCE_NAME: "grafana"
      GF_SECURITY_ADMIN_USER: "{{ grafana.admin.username }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana.admin.password }}"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: "{{ grafana.smtp.host }}"
      GF_SMTP_PORT: "{{ grafana.smtp.port }}"
      GF_SMTP_USER: "{{ grafana.smtp.username }}"
      GF_SMTP_PASSWORD: "{{ grafana.smtp.password }}"
      GF_SMTP_SKIP_VERIFY: "false"
      GF_SMTP_FROM_ADDRESS: "{{ grafana.smtp.from }}"
      GF_USERS_VERIFY_EMAIL_ENABLED: "true"
      GF_EMAILS_WELCOME_EMAIL_ON_SIGNUP: "true"
