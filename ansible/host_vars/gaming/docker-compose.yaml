---
version: "3"

services:
  mineos:
    image: ghcr.io/jon77p/mineos-node:latest
    networks:
      - mineos
    restart: always

    # Adjust as needed; if this is too short, stopping the container
    #  may corrupt map data
    stop_grace_period: 10m

    volumes:
      # Using a bind mapping is preferrable here due to how docker
      # stores names volumes by default in /var/lib/docker/volumes
      # with permissions that prevent normal users from accessing
      # the folder structure.
      - "{{ docker_volume_dirs.mineos[0] }}:/var/games/minecraft"

    environment:
      # Should the web interface use HTTPS or HTTP?
      # Valid entries are "true" and "false" (with quotes)
      USE_HTTPS: "false"

      # What port should the web interface listen on?
      # This is independant of the USE_HTTPS setting.
      SERVER_PORT: "{{ gaming.mineos.port }}"

      # On startup, mineos will check if an account of this name exists.
      # If it does not exist, one will be created. This account, and
      # any other created with this variable will be permitted to login
      # to the web interface.
      USER_NAME: "{{ gaming.mineos.username }}"

      # If the account listed above does not already exist, when mineos
      # creates it, it will do so with UID. If an account with this UID
      # already exists, account creation will be aborted.
      USER_UID: 1000

      # If the account is being created, it will use either the password
      # set below, or a random, 20 character password will generated for
      # you and displayed in the console log. After first launch, you
      # should check the log.
      USER_PASSWORD: "{{ gaming.mineos.password }}"

    ports:
      # HTTPS port for web interface. If you change the SERVER_PORT
      # variable, also change this mapping.
      - "{{ gaming.mineos.port }}:8000/tcp"

      # Minecraft server ports. 25565 is the default, but is you plan
      # on running multiple servers at the same time, each will need
      # a unique port unless you are using bungiecord.
      # Expand this range as needed.
      - "{{ gaming.mineos.minecraft.ports }}:25565-25570/tcp"
      - "{{ gaming.mineos.minecraft.ports }}:25565-25570/udp"
    healthcheck:
      test: [CMD, curl, "{{ healthchecks.healthcheck }}"]
      timeout: 45s
      interval: 10s
      retries: 5

  smo_online_server:
    image: ghcr.io/sanae6/smo-online-server:latest
    restart: always

    # user: 1000:1000

    volumes:
      - "{{ docker_volume_dirs.smo_online_server[0] }}:/data"

    stdin_open: true
    ports:
      - "{{ gaming.smo_online_server.port }}:1027"
    healthcheck:
      test: [CMD, curl, "{{ healthchecks.healthcheck }}"]
      timeout: 45s
      interval: 10s
      retries: 5

networks:
  mineos:
