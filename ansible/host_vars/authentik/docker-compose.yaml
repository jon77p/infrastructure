---
version: "3"
services:
  postgresql:
    image: docker.io/library/postgres:17.5-alpine@sha256:fbe21607052bb5c298674f2fd8cf044a63aa3ddf50b81627f894f91f40f50bcb
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "{{ authentik.postgres.password }}"
      POSTGRES_USER: "{{ authentik.postgres.username }}"
      POSTGRES_DB: "{{ authentik.postgres.database }}"
  redis:
    image: docker.io/library/redis:alpine@sha256:73734b014e53b3067916918b70718ca188c16895511a272a020c9a71084eecda
    command: --save 60 1 --loglevel warning
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
  server:
    image: ghcr.io/goauthentik/server:2025.6.3@sha256:334354d11e015037cc1b030a9710e564f6e3545369d28789db823e86171d3fdc
    restart: always
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: "{{ authentik.secret_key }}"
      AUTHENTIK_BOOTSTRAP_EMAIL: "{{ authentik.bootstrap.email }}"
      AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ authentik.bootstrap.password }}"
      # Database configuration
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: "{{ authentik.postgres.username }}"
      AUTHENTIK_POSTGRESQL__NAME: "{{ authentik.postgres.database }}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik.postgres.password }}"
      # Email configuration
      AUTHENTIK_EMAIL__HOST: "{{ authentik.email.host }}"
      AUTHENTIK_EMAIL__PORT: "{{ authentik.email.port }}"
      AUTHENTIK_EMAIL__USERNAME: "{{ authentik.email.username }}"
      AUTHENTIK_EMAIL__PASSWORD: "{{ authentik.email.password }}"
      AUTHENTIK_EMAIL__USE_TLS: "{{ authentik.email.use_tls | string() }}"
      AUTHENTIK_EMAIL__USE_SSL: "{{ authentik.email.use_ssl | string() }}"
      AUTHENTIK_EMAIL__TIMEOUT: "{{ authentik.email.timeout }}"
      AUTHENTIK_EMAIL__FROM: "{{ authentik.email.from }}"
    volumes:
      - "{{ docker_volume_dirs.authentik[0] }}:/media"
      - "{{ docker_volume_dirs.authentik[1] }}:/templates"
    ports:
      - "{{ authentik.ports.http }}:9000"
      - "{{ authentik.ports.https }}:9443"
    depends_on:
      - postgresql
      - redis
  worker:
    image: ghcr.io/goauthentik/server:2025.6.3@sha256:334354d11e015037cc1b030a9710e564f6e3545369d28789db823e86171d3fdc
    restart: always
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: "{{ authentik.secret_key }}"
      AUTHENTIK_BOOTSTRAP_EMAIL: "{{ authentik.bootstrap.email }}"
      AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ authentik.bootstrap.password }}"
      # Database configuration
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: "{{ authentik.postgres.username }}"
      AUTHENTIK_POSTGRESQL__NAME: "{{ authentik.postgres.database }}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik.postgres.password }}"
      # Email configuration
      AUTHENTIK_EMAIL__HOST: "{{ authentik.email.host }}"
      AUTHENTIK_EMAIL__PORT: "{{ authentik.email.port }}"
      AUTHENTIK_EMAIL__USERNAME: "{{ authentik.email.username }}"
      AUTHENTIK_EMAIL__PASSWORD: "{{ authentik.email.password }}"
      AUTHENTIK_EMAIL__USE_TLS: "{{ authentik.email.use_tls | string() }}"
      AUTHENTIK_EMAIL__USE_SSL: "{{ authentik.email.use_ssl | string() }}"
      AUTHENTIK_EMAIL__TIMEOUT: "{{ authentik.email.timeout }}"
      AUTHENTIK_EMAIL__FROM: "{{ authentik.email.from }}"
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ docker_volume_dirs.authentik[0] }}:/media"
      - "{{ docker_volume_dirs.authentik[1] }}:/templates"
      - "{{ docker_volume_dirs.authentik[2] }}:/certs"
    depends_on:
      - postgresql
      - redis

volumes:
  database:
    driver: local
  redis:
    driver: local
