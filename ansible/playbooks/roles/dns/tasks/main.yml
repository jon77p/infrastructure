---
- name: Set empty normalized nameservers list
  ansible.builtin.set_fact:
    normalized_nameservers: []

- name: Normalize nameservers
  include_tasks: normalize_nameservers.yml
  loop: "{{ nameservers }}"
  loop_control:
    loop_var: nameserver
  when: nameservers != []

- name: Print normalized nameservers
  ansible.builtin.debug:
    msg: "Normalized nameservers: {{ normalized_nameservers | to_json }}"

# Create /etc/systemd/resolved.conf.d if it doesn't exist
- name: Create /etc/systemd/resolved.conf.d
  become: true
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d
    state: directory
    owner: root
    group: root
    mode: 0755

# Create drop-in file for systemd-resolved to set our nameservers
- name: Create drop-in file for systemd-resolved
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/resolved.conf.d/10-dns.conf
    content: |
      [Resolve]
      DNS={{ normalized_nameservers | join(' ') }}
      Domains=~.
    owner: root
    group: root
    mode: 0644
  register: systemd_resolved_dropin

- name: Restart systemd-resolved
  become: true
  ansible.builtin.systemd:
    name: systemd-resolved
    state: restarted
