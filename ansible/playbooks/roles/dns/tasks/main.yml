---
# Don't let DHCP4 set DNS servers (by using dhcp4-overrides in netplan)
- name: Disable DNS overrides
  become: true
  ansible.builtin.blockinfile:
    path: /etc/netplan/50-cloud-init.yaml
    insertafter: "(\\s*)set-name: (\\S+)"
    marker: "            # {mark} ANSIBLE MANAGED BLOCK"
    block: "            dhcp4-overrides:\n                use-dns: false\n                use-domains: false\n"
  register: netplan_dhcp

- name: Apply new netplan
  become: true
  ansible.builtin.command: netplan apply
  async: 5
  poll: 1
  when: netplan_dhcp.changed

- name: Restart systemd-resolved
  become: true
  ansible.builtin.systemd:
    name: systemd-resolved
    state: restarted

- name: Normalize nameservers
  include_tasks: normalize_nameservers.yml
  loop: "{{ nameservers }}"
  loop_control:
    loop_var: nameserver

- name: Get primary network interface
  become: true
  ansible.builtin.shell: "ip route | grep default | awk '{print $5}'"
  register: primary_interface

# Create /etc/systemd/resolved.conf.d if it doesn't exist
- name: Create /etc/systemd/resolved.conf.d
  become: true
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d
    state: directory
    owner: root
    group: root
    mode: 0755

# Create drop-in file for systemd-resolved for DNS on {{ primary_interface.stdout }}
- name: Create drop-in file for systemd-resolved on {{ primary_interface.stdout }}
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/resolved.conf.d/10-stub-resolver.conf
    content: |
      [Resolve]
      DNSStubListener=no
      DNS={{ normalized_nameservers | join(' ') }}
      Domains=~.
      Interface={{ primary_interface.stdout }}
    owner: root
    group: root
    mode: 0644

- name: Restart systemd-resolved
  become: true
  ansible.builtin.systemd:
    name: systemd-resolved
    state: restarted
