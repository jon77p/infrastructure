---

- hosts: manager
  tags:
    - k3s
  tasks:
    - name: Check if k3s is installed
      become: true
      stat:
        path: /usr/local/bin/k3s
      register: k3s_check

    - name: Install k3s
      when: not k3s_check.stat.exists
      become: true
      shell: curl -sfL https://get.k3s.io | sh -

    - name: Retrieve node token
      become: true
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: nodetoken

    - name: Store node token in dummy host
      add_host:
        name: "K3S_TOKEN_HOLDER"
        token: "{{ nodetoken.stdout }}"

    - debug:
        var: hostvars['K3S_TOKEN_HOLDER']['token']

    - name: Fetch client-ca.crt
      become: true
      fetch:
        src: /var/lib/rancher/k3s/server/tls/client-admin.crt
        dest: ../files/
        flat: yes

    - name: Fetch client-ca.key
      become: true
      fetch:
        src: /var/lib/rancher/k3s/server/tls/client-admin.key
        dest: ../files/
        flat: yes

- hosts: nodes
  vars:
    manager_hostname: pi1
  tags:
    - k3s
  tasks:
    - name: Check if k3s is installed
      become: true
      stat:
        path: /usr/local/bin/k3s
      register: k3s_check

    - name: Include innernet variables
      when: not k3s_check.stat.exists
      include_vars: roles/innernet/vars/main.yml

    - name: Install k3s
      when: not k3s_check.stat.exists
      become: true
      shell: curl -sfL https://get.k3s.io | K3S_URL=https://{{ manager_hostname }}.{{ innernet_network }}.wg:6443 K3S_TOKEN={{ hostvars['K3S_TOKEN_HOLDER']['token'] }} sh
